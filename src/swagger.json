{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Marvel API",
        "description": "This outlines API endpoints for Marvel application."
    },
    "paths": {
        "/characters": {
            "get": {
                "summary": "Api that returns all character id",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned in case of success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CharacterIds"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "default": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                }
            }
        },
        "/characters/{characterId}": {
            "get": {
                "summary": "Returns character for a given characterId.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "characterId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "example": "1234",
                        "description": "This denotes the id of character."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned in case of success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Character"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returned in case the content is not licensed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned in case of error - invalid characterId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CharacterIds": {
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "Character": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Error": {
                "required": ["message"],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "requestBodies": {
            "FileUpload": {
                "required": true,
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "file": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "ehrSystemId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "responses": {
            "UnexpectedError": {
                "description": "Returned in case of unexpected system error. Used for all HTTP status codes not covered individually in this operation.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "UnauthorizedError": {
                "description": "Request header: Authorization is missing or invalid.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ForbiddenError": {
                "description": "Returned incase user does not have access to resource",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFoundResponse": {
                "description": "Returned in case of the resource couldn't be found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        }
    }
}
